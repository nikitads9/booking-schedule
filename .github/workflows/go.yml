name: Go

on:
  push:
    branches: [ main]
  pull_request:
    branches: [ main ]

jobs:
  scc_job:
    runs-on: ubuntu-latest
    name: A job to count the lines of code.
    permissions:
      id-token: write 
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get the lines of code.
        id: scc
        uses: iryanbell/scc-docker-action@v1.0.2
        with:
          args: ${{ env.workspace }} --exclude-dir docs,LICENSE,README.md --gen --no-gen --format json .
      - name: Write Badge
        uses: action-badges/core@0.3.0
        with:
          file-name: lines.svg
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          badge-branch: main
          label: code lines
          message: ${{ fromJson(steps.scc.outputs.scc)[0].Code }}
          message-color: blue

  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.21

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v -race -coverprofile="coverage.out" -covermode=atomic ./...
    - name: Test coverage
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: true 
        files: ./coverage.out
        flags: unittests 
        name: codecov-umbrella 
        token: ${{ secrets.CODECOV_TOKEN }} 
        verbose: true 
        slug: nikitads9/booking-schedule
  
  linter:
    strategy:
      matrix:
        go-version: [1.21.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Run linters
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest
