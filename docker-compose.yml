version: "3.8"

networks:
  app_net:
    driver: bridge

volumes:
  postgres-volume:

services:
  db:
    image: postgres:16-alpine3.19
    container_name: 'event_storage'
    environment:
      - "POSTGRES_DB=${DB_NAME}"
      - "POSTGRES_USER=${DB_USER}"
      - "POSTGRES_PASSWORD=${DB_PASSWORD}"
      - "PGDATA=${PGDATA}"
    expose:
    - "${DB_PORT}" 
    volumes: 
      - postgres-volume:/var/lib/postgresql/data
    #  - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql 
    ports:
      - "${DB_PORT}:${DB_PORT}"
    command: -p ${DB_PORT}
    networks:
      - app_net

  events:
    build:
      context: .
      dockerfile: ./deploy/events/Dockerfile
    image: nikitads9/event-schedule:events
    container_name: 'events'
    ports:
      - "${EVENTS_PORT}:${EVENTS_PORT}"
    depends_on:
      - db
    networks:
      - app_net

  goose:
    container_name: 'goose'
    build: ./deploy/migrations/
    restart: on-failure
    environment:
      - "GOOSE_DRIVER=postgres"
      - "GOOSE_DBSTRING=host=${DB_HOST} port=${DB_PORT} dbname=${DB_NAME} user=${DB_USER} password=${DB_PASSWORD} sslmode=${DB_SSL}"
      - "MIGRATION_DIR=${MIGRATION_DIR}"
    ports:
      - "5446:5433"
    depends_on:
      - db
    networks:
      - app_net