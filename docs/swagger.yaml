basePath: /events
definitions:
  event-schedule_internal_app_api.AddEventResponse:
    properties:
      eventID:
        example: 550e8400-e29b-41d4-a716-446655440000
        format: uuid
        type: string
      response:
        $ref: '#/definitions/event-schedule_internal_app_api.Response'
    type: object
  event-schedule_internal_app_api.DeleteEventResponse:
    properties:
      response:
        $ref: '#/definitions/event-schedule_internal_app_api.Response'
    type: object
  event-schedule_internal_app_api.GetEventResponse:
    properties:
      event:
        $ref: '#/definitions/event-schedule_internal_app_model.EventInfo'
      response:
        $ref: '#/definitions/event-schedule_internal_app_api.Response'
    type: object
  event-schedule_internal_app_api.GetEventsResponse:
    properties:
      events:
        items:
          $ref: '#/definitions/event-schedule_internal_app_model.EventInfo'
        type: array
      response:
        $ref: '#/definitions/event-schedule_internal_app_api.Response'
    type: object
  event-schedule_internal_app_api.GetVacantDatesResponse:
    properties:
      intervals:
        items:
          $ref: '#/definitions/event-schedule_internal_app_model.Interval'
        type: array
      response:
        $ref: '#/definitions/event-schedule_internal_app_api.Response'
    type: object
  event-schedule_internal_app_api.GetVacantRoomsResponse:
    properties:
      response:
        $ref: '#/definitions/event-schedule_internal_app_api.Response'
      rooms:
        items:
          $ref: '#/definitions/event-schedule_internal_app_model.Suite'
        type: array
    type: object
  event-schedule_internal_app_api.Request:
    properties:
      endDate:
        description: Дата и время окончания бронировании
        example: "2024-03-29T17:43:00-03:00"
        type: string
      notificationPeriod:
        description: Интервал времени для предварительного уведомления о бронировании
        example: 24h
        type: string
      startDate:
        description: Дата и время начала бронировании
        example: "2024-03-28T17:43:00-03:00"
        type: string
      suiteID:
        description: номер апаратаментов
        example: 123
        type: integer
    required:
    - endDate
    - startDate
    - suiteID
    type: object
  event-schedule_internal_app_api.Response:
    properties:
      code:
        description: application-specific error code
        type: integer
      error:
        description: application-level error message, for debugging
        type: string
      status:
        description: user-level status message
        type: string
    type: object
  event-schedule_internal_app_api.UpdateEventResponse:
    properties:
      response:
        $ref: '#/definitions/event-schedule_internal_app_api.Response'
    type: object
  event-schedule_internal_app_model.EventInfo:
    properties:
      EventID:
        description: Уникальный идентификатор бронирования
        example: 550e8400-e29b-41d4-a716-446655440000
        format: uuid
        type: string
      createdAt:
        description: Дата и время создания
        type: string
      endDate:
        description: Дата и время окончания бронировании
        type: string
      notifyAt:
        description: Интервал времени для уведомления о бронировании
        type: string
      ownerID:
        description: Идентификатор владельца бронирования
        type: integer
      startDate:
        description: Дата и время начала бронировании
        type: string
      suiteID:
        description: Номер апартаментов
        type: integer
      updatedAt:
        description: Дата и время обновления
        type: string
    type: object
  event-schedule_internal_app_model.Interval:
    properties:
      end:
        type: string
      start:
        example: "2024-03-02T15:04:05-07:00"
        type: string
    type: object
  event-schedule_internal_app_model.Suite:
    properties:
      capacity:
        example: 4
        type: integer
      name:
        example: Winston Churchill
        type: string
      suiteID:
        example: 123
        type: integer
    type: object
host: 127.0.0.1:3000
info:
  contact:
    name: Nikita Denisenok
    url: https://vk.com/ndenisenok
  description: This is a service for writing and reading booking entries.
  license:
    name: GNU 3.0
    url: https://www.gnu.org/licenses/gpl-3.0.ru.html
  termsOfService: http://swagger.io/terms/
  title: event-schedule API
  version: "1.0"
paths:
  /{user_id}/{event_id}/delete:
    delete:
      description: Deletes an event with given UUID.
      operationId: removeByEventID
      parameters:
      - default: 1234
        description: user_id
        format: int64
        in: path
        name: user_id
        required: true
        type: integer
      - default: 550e8400-e29b-41d4-a716-446655440000
        description: event_id
        format: uuid
        in: path
        name: event_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.DeleteEventResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.DeleteEventResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.DeleteEventResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.DeleteEventResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.DeleteEventResponse'
      summary: Deletes an event
      tags:
      - events
  /{user_id}/{event_id}/get:
    get:
      description: Responds with booking info for booking with given EventID.
      operationId: getEventbyTag
      parameters:
      - default: 1234
        description: user_id
        format: int64
        in: path
        name: user_id
        required: true
        type: integer
      - default: 550e8400-e29b-41d4-a716-446655440000
        description: event_id
        format: uuid
        in: path
        name: event_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.GetEventResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.GetEventResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.GetEventResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.GetEventResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.GetEventResponse'
      summary: Get event info
      tags:
      - events
  /{user_id}/{event_id}/update:
    patch:
      consumes:
      - application/json
      description: 'Updates an existing event with given EventID, suiteID, startDate,
        endDate values (notificationPeriod being optional). Implemented with the use
        of transaction: first room availibility is checked. In case one attempts to
        alter his previous booking (i.e. widen or tighten its'' limits) the booking
        is updated.  If it overlaps with smb else''s booking or with clients'' another
        booking the request is considered unsuccessful. startDate parameter  is to
        be before endDate and both should not be expired.'
      operationId: modifyEventByJSON
      parameters:
      - default: 1234
        description: user_id
        format: int64
        in: path
        name: user_id
        required: true
        type: integer
      - default: 550e8400-e29b-41d4-a716-446655440000
        description: event_id
        format: uuid
        in: path
        name: event_id
        required: true
        type: string
      - description: UpdateEventRequest
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/event-schedule_internal_app_api.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.UpdateEventResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.UpdateEventResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.UpdateEventResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.UpdateEventResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.UpdateEventResponse'
      summary: Updates event info
      tags:
      - events
  /{user_id}/{suite_id}/get-vacant-dates:
    get:
      description: Responds with list of vacant intervals within month for selected
        suite.
      operationId: getDatesBySuiteID
      parameters:
      - default: 1234
        description: user_id
        format: int64
        in: path
        name: user_id
        required: true
        type: integer
      - default: 1234
        description: suite_id
        format: int64
        in: path
        name: suite_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.GetVacantDatesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.GetVacantDatesResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.GetVacantDatesResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.GetVacantDatesResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.GetVacantDatesResponse'
      summary: Get vacant intervals
      tags:
      - events
  /{user_id}/add:
    post:
      consumes:
      - application/json
      description: 'Adds an  associated with user with given parameters. NotificationPeriod
        is optional and must look like {number}s,{number}m or {number}h. Implemented
        with the use of transaction: first rooms availibility is checked. In case
        one''s new booking request intersects with and old one(even if belongs to
        him), the request is considered erratic. startDate is to be before endDate
        and both should not be expired.'
      operationId: addByEventJSON
      parameters:
      - default: 1234
        description: user_id
        format: int64
        in: path
        name: user_id
        required: true
        type: integer
      - description: AddEventRequest
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/event-schedule_internal_app_api.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.AddEventResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.AddEventResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.AddEventResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.AddEventResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.AddEventResponse'
      summary: Adds event
      tags:
      - events
  /{user_id}/get-events:
    get:
      description: Responds with series of event info objects within given time period.
        The query parameters are start date and end date (start is to be before end
        and both should not be expired).
      operationId: getMultipleEventsByTag
      parameters:
      - default: 1234
        description: user_id
        format: int64
        in: path
        name: user_id
        required: true
        type: integer
      - default: "2024-03-28T17:43:00-03:00"
        description: start
        format: time.Time
        in: query
        name: start
        required: true
        type: string
      - default: "2024-03-29T17:43:00-03:00"
        description: end
        format: time.Time
        in: query
        name: end
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.GetEventsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.GetEventsResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.GetEventsResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.GetEventsResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.GetEventsResponse'
      summary: Get several events info
      tags:
      - events
  /{user_id}/get-vacant-rooms:
    get:
      description: Receives two dates as query parameters. start is to be before end
        and both should not be expired. Responds with list of vacant rooms and their
        parameters for given interval.
      operationId: getRoomsByDates
      parameters:
      - default: 1234
        description: user_id
        format: int64
        in: path
        name: user_id
        required: true
        type: integer
      - default: "2024-03-28T17:43:00-03:00"
        description: start
        format: time.Time
        in: query
        name: start
        required: true
        type: string
      - default: "2024-03-29T17:43:00-03:00"
        description: end
        format: time.Time
        in: query
        name: end
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.GetVacantRoomsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.GetVacantRoomsResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.GetVacantRoomsResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.GetVacantRoomsResponse'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/event-schedule_internal_app_api.GetVacantRoomsResponse'
      summary: Get list of vacant rooms
      tags:
      - events
schemes:
- http
- https
swagger: "2.0"
